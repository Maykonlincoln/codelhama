version: 2.1

jobs:
  check_python_format:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.txt" }}-{{ checksum "ci-requirements.txt" }}
      - run:
          name: "Check format of .py with ufmt"
          command: |
            python3 -m venv venv
            source venv/bin/activate
            pip install -r ci-requirements.txt
            ufmt check .
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.txt" }}-{{ checksum "ci-requirements.txt" }}
  check_type_annotation:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.txt" }}-{{ checksum "ci-requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt -r dev-requirements.txt
      - run:
          name: "mypy"
          command: |
            source venv/bin/activate
            mkdir .mypy_cache
            mypy --install-types --non-interactive ./ --cache-dir=.mypy_cache/
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.txt" }}-{{ checksum "ci-requirements.txt" }}

workflows:
  frontend:
    jobs:
      - check_python_format
